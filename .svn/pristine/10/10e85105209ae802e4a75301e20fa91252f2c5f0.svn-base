package Api.utils

import java.sql.{Connection, PreparedStatement}

import org.apache.commons.dbcp.BasicDataSource

/** 数据库连接池工具类
  * Created by liuxiang on 2018/12/7.
  */
object ConnectPoolUtil{
  private var bs:BasicDataSource = null
  /**
    *创建数据源
    */
  def getDataSource():BasicDataSource = {
    if (bs == null){
      bs = new BasicDataSource()
      val prop = PropertiesReaderUtils.getProperties("/conf/path.properties")
      bs.setDriverClassName(prop.getProperty("driver"))
      bs.setUrl(prop.getProperty("url"))
      bs.setUsername(prop.getProperty("userName"))
      bs.setPassword(prop.getProperty("password"))
      bs.setMaxActive(200) //设置最大的并发数
      bs.setInitialSize(30) //数据库初始化时，创建的连接个数
      bs.setMinIdle(50) //最小空闲连接数
      bs.setMaxIdle(200) //数据库最大连接数
      bs.setMaxWait(1000)
      bs.setMinEvictableIdleTimeMillis(60 * 1000) //空闲连接60秒之后释放
//      bs.setTimeBetweenEvictionRunsMills(5 * 60 * 1000) //5分钟检测一次是否有进程死掉
    }
    bs
  }

  /**
    *释放数据源
    */
  def shutDownDataSource(){
    if (bs != null) {
      bs.close()
    }
  }

  /**
    *获取数据库的连接
    */
  def getConnection():Connection = {
    var conn :Connection = null
    try{
      if (bs != null){
        conn = bs.getConnection()
      }else{
        conn = getDataSource().getConnection()
      }
    }catch {
      case e:Exception => println(e.getMessage)
    }
    conn
  }

  /**
    *关闭连接
    */
  def closeConn(ps:PreparedStatement, conn:Connection){
    if (ps != null)
      ps.close()
    if (conn != null)
      conn.close()
  }
}

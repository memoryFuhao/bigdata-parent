package com.video.bigdata.bigdatasolr;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.video.bigdata.bigdatasolr.utils.JsonUtils;
import org.junit.Test;

import java.util.Map;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

public class JsonTest {
    @Test
    public void test2(){
        String str = "{\"uuid\":\"bd867b387cb44481ab1e93cb0ebd7382\",\"objType\":1,\"objId\":6,\"serialNumber\":\"1155403522\",\"bigImgURL\":\"http://127.0.0.1:8082/20181120/13/bg/human_1155403522-000006_st40_end7240.jpg\",\"imgURL\":\"http://127.0.0.1:8082/20181120/13/thumb/human_1155403522-000006_st40_end7240_thumb.jpg\",\"startFrameIdx\":0,\"endFrameIdx\":180,\"startFramePts\":40,\"endFramePts\":7240,\"createTime\":\"2018-11-20 13:49:04\",\"firstObj\":0,\"snapshot\":{\"frameIdx\":6,\"width\":1920,\"height\":1080,\"boundingBox\":{\"x\":184,\"y\":514,\"w\":64,\"h\":204}},\"upperClothing\":262144,\"lowerClothing\":1048576,\"features\":{\"faceBoundingBox\":{\"x\":0,\"y\":0,\"h\":0,\"w\":0},\"faceUrl\":\"\",\"coatStyle\":{\"code\":1,\"value\":\"长袖\"},\"trousersStyle\":{\"code\":1,\"value\":\"长裤\"},\"respirator\":-1,\"coatTexture\":1,\"cap\":0,\"hairStyle\":1,\"trousersTexture\":1,\"luggage\":-1,\"trolley\":-1,\"coatColor1\":{\"code\":\"16724484\",\"value\":\"蓝\"},\"coatColor2\":{\"code\":\"-1\",\"value\":\"\"},\"trousersColor1\":{\"code\":\"0\",\"value\":\"黑(深灰)\"},\"trousersColor2\":{\"code\":\"-1\",\"value\":\"\"},\"sex\":2,\"age\":8,\"angle\":512,\"bag\":0,\"carryBag\":0,\"glasses\":0,\"umbrella\":1,\"featureType\":1,\"featureData\":\"\"}}";
        JSONObject jsonObject = JSON.parseObject(str);
        Map<String,Object> map = new ConcurrentHashMap<String,Object>();
        JsonUtils.objectAnalysis(null,jsonObject,map);
        Set<Map.Entry<String, Object>> entries = map.entrySet();
        for(Map.Entry<String, Object> entry : entries){
            System.out.println(entry.getKey() + "=" + entry.getValue());
        }
    }
    @Test
    public void test3(){
        Object i = 32;
        String s = "123";
        System.out.println(i instanceof Integer);
        System.out.println(s instanceof String);
    }

}
